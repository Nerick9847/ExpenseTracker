@page "/debt"
@inject ExpenseTracker.Services.DebtService DebtService
@using ExpenseTracker.Services
@inject BalanceState BalanceState


<div class="dashboard-header">
    <div class="buttons-container">
        <button class="btn btn-primary" @onclick="ShowAddDebtModal">Add Debt</button>
        <button class="btn btn-info" @onclick="ExportDebts">Export</button>
    </div>
</div>

<div class="filter-container">
    <input type="text" class="form-control" @bind="filterDescription" @bind:after="ApplyFilter" placeholder="Search by Description" />
    <select class="form-control" @bind="filterCategory" @bind:after="ApplyFilter">
        <option value="">Select Category</option>
        @foreach (var category in categories)
        {
            <option value="@category">@category</option>
        }
    </select>
    <select class="form-control" @bind="selectedPaymentStatus">
        <option value="">Select Payment Status</option>
        <option value="Paid">Paid</option>
        <option value="Pending">Pending</option>
    </select>
    <div class="date-range">
        <label>Start Date:</label>
        <input type="date" class="form-control" @bind="startDate" />
        <label>End Date:</label>
        <input type="date" class="form-control" @bind="endDate" />
    </div>
    <div class="filter-buttons">
        <button class="btn btn-primary" @onclick="ApplyFilter">Filter</button>
        <button class="btn btn-secondary" @onclick="ClearFilters">Clear Filters</button>
        <button class="btn btn-info" @onclick="ToggleSort">Sort by Amount @(isSortedAscending ? "Ascending" : "Descending")</button>
    </div>
</div>

<table class="transaction-table">
    <thead>
        <tr>
            <th>Description</th>
            <th>Amount</th>
            <th>Category</th>
            <th>Due Date</th>
            <th>Is Paid</th>
            <th>When Added</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var debt in filteredDebts)
        {
            <tr>
                <td>@debt.DebtDescription</td>
                <td>@debt.DebtAmount.ToString("C")</td>
                <td>@debt.DebtCategory</td>
                <td>@debt.DueDate.ToShortDateString()</td>
                <td>@(debt.IsPaid ? "Paid" : "Pending")</td>
                <td>@debt.WhenAdded.ToShortDateString()</td>
                <td>
                    <button class="btn btn-warning" @onclick="() => ShowEditDebtModal(debt)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteDebtAsync(debt.DebtId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (isModalVisible)
{
    <div class="modal">
        <div class="modal-content">
            <h2>@(isEditMode ? "Edit Debt" : "Add New Debt")</h2>
            <EditForm Model="currentDebt" OnValidSubmit="SaveDebtAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div>
                    <label>Description:</label>
                    <InputText class="form-control" @bind-Value="currentDebt.DebtDescription" />
                </div>

                <div>
                    <label>Amount:</label>
                    <InputNumber class="form-control" @bind-Value="currentDebt.DebtAmount" />
                </div>

                <div>
                    <label>Category:</label>
                    <InputSelect class="form-control" @bind-Value="currentDebt.DebtCategory">
                        <option value="">Select Category</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category">@category</option>
                        }
                    </InputSelect>
                </div>

                <div>
                    <label>Due Date:</label>
                    <InputDate class="form-control" @bind-Value="currentDebt.DueDate" />
                </div>

                <div>
                    <label>Payment Status:</label>
                    <InputCheckbox @bind-Value="currentDebt.IsPaid" /> Is Paid
                </div>

                <div>
                    <label>When Added:</label>
                    <InputDate class="form-control" @bind-Value="currentDebt.WhenAdded" />
                </div>

                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" @onclick="CloseModal">Cancel</button>
                    <button class="btn btn-primary" type="submit">Save</button>
                </div>
            </EditForm>
        </div>
    </div>
}

